# docker-compose.yml file to launch a full instance of Read the Docs.
#
# Read the Docs' Core team is using docker-compose internally.
# We do not offer support on this file and configuration at this point.
# DO NOT USE DOCKER-COMPOSE SETUP FOR PRODUCTION OR CUSTOM INSTALLATION.

version: '3'

volumes:
  build-user-builds:
  azurite_data:
  postgres_data:
  postgres_backups_data:

services:
  server:
    # Image used for all the other services (proxito, web, celery, build)
    build:
      context: .
      dockerfile: ${PWD}/dockerfiles/Dockerfile

  nginx:
    image: nginx
    ports:
      - "80:80"
    depends_on:
      - web
      - proxito
      - storage
    volumes:
      - ${PWD}/dockerfiles/nginx:/etc/nginx/conf.d

  proxito:
    image: readthedocsorg_server:latest
    volumes:
      - ${PWD}/dockerfiles/entrypoints/common.sh:/usr/src/app/docker/common.sh
      - ${PWD}/dockerfiles/entrypoints/proxito.sh:/usr/src/app/docker/proxito.sh
      - ${PWD}:/usr/src/app/checkouts/readthedocs.org
      - ${PWD}/../readthedocs-ext:/usr/src/app/checkouts/readthedocs-ext
      - ${PWD}/dockerfiles/settings/proxito.py:/usr/src/app/checkouts/readthedocs.org/readthedocs/settings/proxito.py
    environment:
      - DOCKER_NO_RELOAD
      - DJANGO_SETTINGS_MODULE=readthedocs.settings.proxito

    # Allow us to run `docker attach readthedocsorg_proxito_1` and get
    # control on STDIN and be able to debug our code with interactive pdb
    stdin_open: true
    tty: true

    command: ["../../docker/proxito.sh"]

  web:
    image: readthedocsorg_server:latest
    volumes:
      - ${PWD}/dockerfiles/scripts/createsuperuser.py:/usr/src/app/docker/createsuperuser.py
      - ${PWD}/dockerfiles/entrypoints/common.sh:/usr/src/app/docker/common.sh
      - ${PWD}/dockerfiles/entrypoints/web.sh:/usr/src/app/docker/web.sh
      - ${PWD}/../readthedocs-ext:/usr/src/app/checkouts/readthedocs-ext
      - ${PWD}:/usr/src/app/checkouts/readthedocs.org
      - ${PWD}/dockerfiles/settings/web.py:/usr/src/app/checkouts/readthedocs.org/readthedocs/settings/web.py
    depends_on:
      - storage
      - azure-cli
    environment:
      - INIT=${INIT:-}
      - DOCKER_NO_RELOAD
      - DJANGO_SETTINGS_MODULE=readthedocs.settings.web
    stdin_open: true
    tty: true
    command: ["../../docker/web.sh"]

  celery:
    image: readthedocsorg_server:latest
    volumes:
      - ${PWD}/dockerfiles/entrypoints/common.sh:/usr/src/app/docker/common.sh
      - ${PWD}/dockerfiles/entrypoints/celery.sh:/usr/src/app/docker/celery.sh
      - ${PWD}/dockerfiles/scripts/wait_for_search.py:/usr/src/app/docker/scripts/wait_for_search.py
      - ${PWD}/../readthedocs-ext:/usr/src/app/checkouts/readthedocs-ext
      - ${PWD}:/usr/src/app/checkouts/readthedocs.org
      - ${PWD}/dockerfiles/settings/celery.py:/usr/src/app/checkouts/readthedocs.org/readthedocs/settings/celery.py
    depends_on:
      - storage
      - azure-cli
    environment:
      - DJANGO_SETTINGS_MODULE=readthedocs.settings.celery
      - DOCKER_NO_RELOAD
    stdin_open: true
    tty: true
    command: ["../../docker/celery.sh"]

  build:
    image: readthedocsorg_server:latest
    volumes:
      - ${PWD}/dockerfiles/entrypoints/common.sh:/usr/src/app/docker/common.sh
      - ${PWD}/dockerfiles/entrypoints/build.sh:/usr/src/app/docker/build.sh
      - ${PWD}/../readthedocs-ext:/usr/src/app/checkouts/readthedocs-ext
      - ${PWD}:/usr/src/app/checkouts/readthedocs.org
      - ${PWD}/dockerfiles/settings/build.py:/usr/src/app/checkouts/readthedocs.org/readthedocs/settings/build.py

      # The python code at readthedocs/doc_builder/environments.py
      # mounts `self.project.doc_path`. We need to share this path
      # between the build container (git commands), and the container that
      # is created inside the build container (sphinx commands).
      # Because of this, we need to use a shared volume between them
      - build-user-builds:/usr/src/app/checkouts/readthedocs.org/user_builds

      # Docker in Docker
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DJANGO_SETTINGS_MODULE=readthedocs.settings.build
      - DOCKER_NO_RELOAD
    stdin_open: true
    tty: true
    command: ["../../docker/build.sh"]

  storage:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    volumes:
      - azurite_data:/data
    ports:
      - "10000:10000"
    command: ["azurite-blob", "--silent", "--blobPort", "10000", "--blobHost", "0.0.0.0", "--location", "/data"]

  azure-cli:
    image: microsoft/azure-cli
    volumes:
      - ${PWD}/dockerfiles/scripts/create-containers.sh:/usr/local/bin/create-containers.sh
    depends_on:
      - storage
    command: ["/usr/local/bin/create-containers.sh"]

  cache:
    image: redis:3.2.7

  database:
    image: postgres:11.1
    environment:
      - POSTGRES_USER=docs_user
      - POSTGRES_PASSWORD=docs_pwd
      - POSTGRES_DB=docs_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backups_data:/backups
