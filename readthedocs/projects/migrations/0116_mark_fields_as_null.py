# Generated by Django 4.2.10 on 2024-02-19 11:16

from django.db import migrations, models
from django_safemigrate import Safe


class Migration(migrations.Migration):
    safe = Safe.before_deploy

    dependencies = [
        ("projects", "0115_add_addonsconfig_history"),
    ]

    operations = [
        migrations.AlterField(
            model_name="historicalproject",
            name="conf_py_file",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Path from project root to <code>conf.py</code> file (ex. <code>docs/conf.py</code>). Leave blank if you want us to find it for you.",
                max_length=255,
                null=True,
                verbose_name="Python configuration file",
            ),
        ),
        migrations.AlterField(
            model_name="historicalproject",
            name="documentation_type",
            field=models.CharField(
                choices=[
                    ("sphinx", "Sphinx Html"),
                    ("mkdocs", "Mkdocs"),
                    ("sphinx_htmldir", "Sphinx HtmlDir"),
                    ("sphinx_singlehtml", "Sphinx Single Page HTML"),
                ],
                default=None,
                null=True,
                blank=True,
                help_text='Type of documentation you are building. <a href="http://www.sphinx-doc.org/en/stable/builders.html#sphinx.builders.html.DirectoryHTMLBuilder">More info on sphinx builders</a>.',
                max_length=20,
                verbose_name="Documentation type",
            ),
        ),
        migrations.AlterField(
            model_name="historicalproject",
            name="enable_epub_build",
            field=models.BooleanField(
                blank=True,
                default=False,
                help_text="Create a EPUB version of your documentation with each build.",
                null=True,
                verbose_name="Enable EPUB build",
            ),
        ),
        migrations.AlterField(
            model_name="historicalproject",
            name="enable_pdf_build",
            field=models.BooleanField(
                blank=True,
                default=False,
                help_text="Create a PDF version of your documentation with each build.",
                null=True,
                verbose_name="Enable PDF build",
            ),
        ),
        migrations.AlterField(
            model_name="historicalproject",
            name="install_project",
            field=models.BooleanField(
                blank=True,
                default=False,
                help_text="Install your project inside a virtualenv using <code>setup.py install</code>",
                null=True,
                verbose_name="Install Project",
            ),
        ),
        migrations.AlterField(
            model_name="historicalproject",
            name="path",
            field=models.CharField(
                blank=True,
                editable=False,
                help_text="The directory where <code>conf.py</code> lives",
                max_length=255,
                null=True,
                verbose_name="Path",
            ),
        ),
        migrations.AlterField(
            model_name="historicalproject",
            name="python_interpreter",
            field=models.CharField(
                blank=True,
                choices=[("python", "CPython 2.x"), ("python3", "CPython 3.x")],
                default="python3",
                help_text="The Python interpreter used to create the virtual environment.",
                max_length=20,
                null=True,
                verbose_name="Python Interpreter",
            ),
        ),
        migrations.AlterField(
            model_name="historicalproject",
            name="use_system_packages",
            field=models.BooleanField(
                blank=True,
                default=False,
                help_text="Give the virtual environment access to the global site-packages dir.",
                null=True,
                verbose_name="Use system packages",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="conf_py_file",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Path from project root to <code>conf.py</code> file (ex. <code>docs/conf.py</code>). Leave blank if you want us to find it for you.",
                max_length=255,
                null=True,
                verbose_name="Python configuration file",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="documentation_type",
            field=models.CharField(
                choices=[
                    ("sphinx", "Sphinx Html"),
                    ("mkdocs", "Mkdocs"),
                    ("sphinx_htmldir", "Sphinx HtmlDir"),
                    ("sphinx_singlehtml", "Sphinx Single Page HTML"),
                ],
                default=None,
                null=True,
                blank=True,
                help_text='Type of documentation you are building. <a href="http://www.sphinx-doc.org/en/stable/builders.html#sphinx.builders.html.DirectoryHTMLBuilder">More info on sphinx builders</a>.',
                max_length=20,
                verbose_name="Documentation type",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="enable_epub_build",
            field=models.BooleanField(
                blank=True,
                default=False,
                help_text="Create a EPUB version of your documentation with each build.",
                null=True,
                verbose_name="Enable EPUB build",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="enable_pdf_build",
            field=models.BooleanField(
                blank=True,
                default=False,
                help_text="Create a PDF version of your documentation with each build.",
                null=True,
                verbose_name="Enable PDF build",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="install_project",
            field=models.BooleanField(
                blank=True,
                default=False,
                help_text="Install your project inside a virtualenv using <code>setup.py install</code>",
                null=True,
                verbose_name="Install Project",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="path",
            field=models.CharField(
                blank=True,
                editable=False,
                help_text="The directory where <code>conf.py</code> lives",
                max_length=255,
                null=True,
                verbose_name="Path",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="python_interpreter",
            field=models.CharField(
                blank=True,
                choices=[("python", "CPython 2.x"), ("python3", "CPython 3.x")],
                default="python3",
                help_text="The Python interpreter used to create the virtual environment.",
                max_length=20,
                null=True,
                verbose_name="Python Interpreter",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="use_system_packages",
            field=models.BooleanField(
                blank=True,
                default=False,
                help_text="Give the virtual environment access to the global site-packages dir.",
                null=True,
                verbose_name="Use system packages",
            ),
        ),
    ]
