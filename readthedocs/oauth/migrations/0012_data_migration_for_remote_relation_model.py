# Generated by Django 2.2.16 on 2020-10-10 15:00

from itertools import islice
import json
import logging

from django.db import migrations
from django.utils import timezone

log = logging.getLogger(__name__)


def move_data_to_remote_relations(apps, schema_editor):
    RemoteRepositoryRelation = apps.get_model('oauth', 'RemoteRepositoryRelation')

    def remote_relations_generator(relations, batch_size):
        for relation in relations.iterator(chunk_size=batch_size):
            relation.account_id = relation.remoterepository.account_id
            relation.admin = relation.remoterepository.admin
            relation.created = relation.remoterepository.pub_date
            relation.modified = relation.remoterepository.modified_date

            try:
                relation.json = json.loads(relation.remoterepository.json)
            except json.decoder.JSONDecodeError:
                log.warning(
                    'Could not migrate json data for remote_repository=%s',
                    relation.remoterepository_id
                )

            yield relation

    relations_queryset = RemoteRepositoryRelation.objects.filter(
        user__last_login__gte=timezone.now() - timezone.timedelta(days=30)
    ).select_related(
        'remoterepository'
    ).only(
        'account_id', 'admin', 'created',
        'modified', 'json', 'remoterepository__account_id',
        'remoterepository__admin', 'remoterepository__pub_date',
        'remoterepository__json', 'remoterepository__modified_date'
    )

    batch_size = 1000
    remote_relations = remote_relations_generator(
        relations_queryset, batch_size
    )

    # Follows Example from django docs
    # https://docs.djangoproject.com/en/2.2/ref/models/querysets/#bulk-create
    while True:
        batch = list(islice(remote_relations, batch_size))

        if not batch:
            break

        RemoteRepositoryRelation.objects.bulk_update(
            batch,
            [
                'account_id',
                'admin', 'json',
                'created', 'modified',
            ],
            batch_size
        )


class Migration(migrations.Migration):

    dependencies = [
        ('oauth', '0011_add_remote_relation_model'),
    ]

    operations = [
        migrations.RunPython(move_data_to_remote_relations),
    ]
