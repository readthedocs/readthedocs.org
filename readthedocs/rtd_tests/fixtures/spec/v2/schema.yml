# Read the Docs configuration file

# The version of the spec to be use
version: enum('2')

# Formats of the documentation to be built
# Default: []
formats: any(list(enum('htmlzip', 'pdf', 'epub')), enum('all'), required=False)

# Configuration for Conda support
conda: include('conda', required=False)

# Configuration for the documentation build process
build: include('build', required=False)

# Configuration of the Python environment to be used
python: include('python', required=False)

# Configuration for sphinx documentation
sphinx: include('sphinx', required=False)

# Configuration for mkdocs documentation
mkdocs: include('mkdocs', required=False)

# Submodules configuration
submodules: include('submodules', required=False)

# Redirects for the current version to be built
# Key/value list, represent redirects of type `type`
# from url -> to url
redirects: map(enum('page'), map(str(), str()), required=False)

---

conda:
  # The path to the Conda environment file from the root of the project
  environment: str()

build:
  # The build docker image to be used
  # Default: '2.0'
  image: enum('1.0', '2.0', 'latest', required=False)

python:
  # The Python version
  # Default: '2.7'
  version: enum('2', '2.7', '3', '3.5', '3.6', required=False)

  # The path to the requirements file from the root of the project
  requirements: str(required=False)

  # Install the project using python setup.py install or pip
  install: enum('pip', 'setup.py', required=False)

  # Extra requirements sections to install in addition to the package dependencies
  # Default: []
  extra_requirements: list(str(), required=False)

  # Give the virtual environment access to the global site-packages dir
  # Default: false
  system_packages: bool(required=False)

sphinx:  
  # The path to the conf.py file
  # Default: rtd will try to find it
  configuration: str(required=False)

mkdocs:
  # Something

submodules:
  # List of submodules to be included
  # Default: []
  include: any(list(str()), enum('all'), required=False)

  # List of submodules to be ignored
  # Default: []
  exclude: any(list(str()), enum('all'), required=False)
  
  # Do a recursive clone?
  # Default: false
  recursive: bool(required=False)
