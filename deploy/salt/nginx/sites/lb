upstream rtd {
        server chimera:8000;
        server asgard:8000;
}

#http redirects
server {
        listen         80;
        server_name   localhost readthedocs.org;

            location /nginx_status {
              stub_status on;
              access_log   off;
              allow 127.0.0.1;
              deny all;
            }

            location /api/ {
                proxy_pass http://rtd;
                proxy_buffering off;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
            location /build/ {
                proxy_pass http://rtd;
                proxy_buffering off;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
            location /bitbucket {
                proxy_pass http://rtd;
                proxy_buffering off;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
            location /github {
                proxy_pass http://rtd;
                proxy_buffering off;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
            location / {
                rewrite ^(.*)  https://$host$1;
            }
}


#All proxying goes straight to the webz0rs
server {
    listen 443 ssl default;
    access_log  /var/log/nginx/access_https.log host;
    ssl_certificate  /etc/nginx/ssl/readthedocs_org_complete.crt;
    ssl_certificate_key  /etc/nginx/ssl/readthedocs_org.key;
    ssl_prefer_server_ciphers On;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

    location / {
        proxy_pass http://rtd;
        proxy_buffering off;
        proxy_set_header X-SSL Yup;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Protocol https; # Forward in the request to django
    }
}

server {
    listen 80 default;
    access_log  /var/log/nginx/access_http.log host;
    client_max_body_size 50m;
    location / {
        rewrite_by_lua '
          if string.find(ngx.var.host, "_") then
            local newHost, n = ngx.re.gsub(ngx.var.host, "_", "-")
            ngx.redirect(ngx.var.scheme .. "://" .. newHost .. ngx.var.uri)
          end
        ';
        proxy_pass http://rtd;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
