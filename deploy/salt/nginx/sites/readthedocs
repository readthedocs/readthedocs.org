# perl_modules perl;
# perl_require ReadTheDocs.pm;
port_in_redirect off;

#Media
server {
    listen 8000;
    server_name media.readthedocs.org;
    access_log  /var/log/nginx/rtdmedia.log;

    gzip on;
    gzip_vary on;

    location /wheelhouse/ {
        expires 60d;
        root /home/docs/checkouts/readthedocs.org/media;
        add_header X-Deity %(host)s;
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
    }

    location / {
        expires 7d;
        root /home/docs/checkouts/readthedocs.org/media;
        add_header X-Deity %(host)s;
        add_header 'Access-Control-Allow-Origin' '*';
    }
}

# Because I own the place :)
server {
    listen 8000;
    server_name ericholscher.com;
    location / {
        alias /home/docs/checkouts/readthedocs.org/user_builds/ericholschercom/rtd-builds/latest/;
    }
}

#rtd.org
server {
    index index.html;
    listen 8000;
    server_name readthedocs.org;
    access_log  /var/log/nginx/readthedocs.log host;
    client_max_body_size 50m;

    add_header X-Frame-Options DENY;

    location /favicon.ico {
        root /home/docs/checkouts/readthedocs.org/media/images;
        break;
    }

    location /robots.txt {
        root /home/docs/checkouts/readthedocs.org/media;
        break;
    }

    # Forcibly redirect doc links so we never serve them
    location  ~* /docs/(?P<project>.+)/(?P<doc_lang>\w\w)/(?P<doc_version>.+/?)(?P<path>.+) {
        add_header X-You-Got-Served Nginx;
        add_header X-Deity %(host)s;
        set $proto http;
        if ( $http_x_ssl = Yup ) {
            set $proto https;
        }
        rewrite ^ $proto://$project.readthedocs.org/$doc_lang/$doc_version$path permanent;
    }

    location / {
        proxy_pass http://127.0.0.1:8888;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header X-Deity %(host)s;
    }
    location @fallback {
        proxy_pass http://127.0.0.1:8888;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header X-Deity %(host)s;
        add_header X-Fallback True;
    }

    location /user_builds/ {
        internal;
        root   /home/docs/checkouts/readthedocs.org;
        add_header X-Served nginx-via-django;
        add_header X-Cname $host;
        add_header X-Deity %(host)s;
        error_page 404 = @fallback;
        error_page 500 = @fallback;
    }
}

#Subdomains
server {
    index index.html;
    listen 8000;
    server_name ~^(?P<domain>.+).readthedocs.org;
    access_log  /var/log/nginx/readthedocs.log host;

    location /favicon.ico {
        root /home/docs/checkouts/readthedocs.org/media/images;
        break;
    }

    location /robots.txt {
        root /home/docs/checkouts/readthedocs.org/media;
        break;
    }

    location ~ ^/projects/(?P<subproject>.+)/en/(?P<doc_version>.+)/(?P<path>.*) {
        rewrite_by_lua '
          if string.find(ngx.var.subproject, "_") then
            local oldProject = ngx.var.subproject
            local newProject, n = ngx.re.gsub(oldProject, "_", "-")
            local uri = ngx.re.gsub(ngx.var.uri, oldProject, newProject)
            ngx.redirect(ngx.var.scheme .. "://" .. ngx.var.host .. uri)
          end
        ';
        alias /home/docs/checkouts/readthedocs.org/user_builds/$domain/subprojects/$subproject/../translations/en/$doc_version/$path;
        add_header X-Served Nginx;
        add_header X-Subdomain-SubProject-TryFiles True;
        add_header X-Deity %(host)s;
        error_page 404 = @fallback;
        error_page 500 = @fallback;
    }


    # location ~ /$ {
    #     set $rtd_metadata /home/docs/sites/readthedocs.org/checkouts/readthedocs.org/user_builds/$domain/metadata.json;
    #     perl ReadTheDocs::redirect_home;
    # }

    location / {
        root /home/docs/checkouts/readthedocs.org/user_builds/$domain/translations/;
        try_files $uri $uri/ @single_version;
        error_page 403 = @single_version;
        error_page 500 = @single_version;
        add_header X-Served Nginx;
        add_header X-Subdomain-TryFiles True;
        add_header X-Deity %(host)s;
    }

    location @single_version {
        root /home/docs/checkouts/readthedocs.org/user_builds/$domain/single_version/;
        try_files $uri $uri/ @fallback;
        error_page 403 = @fallback;
        error_page 500 = @fallback;
        add_header X-Served Nginx;
        add_header X-Subdomain-SingleVersion True;
        add_header X-Deity %(host)s;
    }

    location @fallback {
        proxy_pass http://127.0.0.1:8888;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header X-Deity %(host)s;
        add_header X-Fallback True;
    }

    location /user_builds/ {
        internal;
        root   /home/docs/checkouts/readthedocs.org;
        add_header X-Served nginx-via-django;
        add_header X-Cname $host;
        add_header X-Deity %(host)s;
        error_page 404 = @fallback;
        error_page 500 = @fallback;
    }
}

#CNAMEs
server {
    index index.html;
    listen 8000 default;
    access_log  /var/log/nginx/readthedocs-cname.log host;

    location /favicon.ico {
        root /home/docs/checkouts/readthedocs.org/media/images;
        break;
    }

    location /robots.txt {
        root /home/docs/checkouts/readthedocs.org/media;
        break;
    }

    location ~ ^/projects/(?P<subproject>.+)/en/(?P<doc_version>.+)/(?P<path>.*) {
        rewrite_by_lua '
          if string.find(ngx.var.subproject, "_") then
            local oldProject = ngx.var.subproject
            local newProject, n = ngx.re.gsub(oldProject, "_", "-")
            local uri = ngx.re.gsub(ngx.var.uri, oldProject, newProject)
            ngx.redirect(ngx.var.scheme .. "://" .. ngx.var.host .. uri)
          end
        ';
        alias /home/docs/checkouts/readthedocs.org/cnametoproject/$host/subprojects/$subproject/../translations/en/$doc_version/$path;
        add_header X-Served Nginx;
        add_header X-Subdomain-SubProject-TryFiles True;
        add_header X-Deity %(host)s;
        error_page 404 = @fallback;
        error_page 500 = @fallback;
    }

    # location ~ /$ {
    #     set $rtd_metadata /home/docs/checkouts/readthedocs.org/cnametoproject/$host/metadata.json;
    #     perl ReadTheDocs::redirect_home;
    # }

    location / {
        root /home/docs/checkouts/readthedocs.org/cnametoproject/$host/translations/;
        try_files $uri $uri/ @single_version;
        error_page 403 = @single_version;
        error_page 500 = @single_version;
        add_header X-Served Nginx;
        add_header X-Subdomain-TryFiles True;
        add_header X-Deity %(host)s;
    }

    location @single_version {
        root /home/docs/checkouts/readthedocs.org/cnametoproject/$host/single_version/;
        try_files $uri $uri/ @fallback;
        error_page 403 = @fallback;
        error_page 500 = @fallback;
        add_header X-Served Nginx;
        add_header X-Subdomain-SingleVersion True;
        add_header X-Deity %(host)s;
    }

    location @fallback {
        proxy_pass http://127.0.0.1:8888;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header X-Deity %(host)s;
        add_header X-Fallback True;
    }

    location /user_builds/ {
        internal;
        root   /home/docs/checkouts/readthedocs.org;
        error_page 404 = @fallback;
        error_page 500 = @fallback;
        add_header X-Served nginx-via-django;
        add_header X-Cname $host;
        add_header X-Deity %(host)s;
    }
}

#Redirects
server {
    listen 8000;
    server_name rtfd.org www.rtfd.org sphinxdocs.com www.readthedocs.com readthedocs.com www.readthedocs.org djangowoodies.com;
    rewrite ^(.*) http://readthedocs.org$1;
    add_header X-Deity %(host)s;
}

# RTFD
server {
    listen 8000;
    server_name ~^(?P<domain>.+).rtfd.org;
    rewrite ^(.*) http://$domain.readthedocs.org$1;
    add_header X-Deity %(host)s;
}
