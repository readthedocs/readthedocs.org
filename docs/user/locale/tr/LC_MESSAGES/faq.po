# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2018, Read the Docs, Inc & contributors
# This file is distributed under the same license as the Read the Docs package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: readthedocs-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-09-17 19:05-0500\n"
"PO-Revision-Date: 2018-09-18 00:15+0000\n"
"Last-Translator: Anthony <aj@ohess.org>\n"
"Language-Team: Turkish (http://www.transifex.com/readthedocs/readthedocs-docs/language/tr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../faq.rst:2
msgid "Frequently Asked Questions"
msgstr ""

#: ../../faq.rst:5
msgid "My project isn't building with autodoc"
msgstr ""

#: ../../faq.rst:7
msgid ""
"First, you should check out the Builds tab of your project. That records all"
" of the build attempts that RTD has made to build your project. If you see "
"``ImportError`` messages for custom Python modules, you should enable the "
"virtualenv feature in the Admin page of your project, which will install "
"your project into a virtualenv, and allow you to specify a "
"``requirements.txt`` file for your project."
msgstr ""

#: ../../faq.rst:9
msgid ""
"If you are still seeing errors because of C library dependencies, please see"
" :ref:`faq:I get import errors on libraries that depend on C modules`."
msgstr ""

#: ../../faq.rst:13
msgid "How do I change my slug (the URL your docs are served at)?"
msgstr ""

#: ../../faq.rst:15
msgid ""
"We don't support allowing folks to change the slug for their project. You "
"can update the name which is shown on the site, but not the actual URL that "
"documentation is served."
msgstr ""

#: ../../faq.rst:19
msgid ""
"The main reason for this is that all existing URLs to the content will "
"break. You can delete and re-create the project with the proper name to get "
"a new slug, but you really shouldn't do this if you have existing inbound "
"links, as it `breaks the internet "
"<http://www.w3.org/Provider/Style/URI.html>`_."
msgstr ""

#: ../../faq.rst:25
msgid "Help, my build passed but my documentation page is 404 Not Found!"
msgstr ""

#: ../../faq.rst:27
msgid ""
"This often happens because you don't have an `index.html` file being "
"generated. Make sure you have one of the following files:"
msgstr ""

#: ../../faq.rst:30
msgid "`index.rst`"
msgstr ""

#: ../../faq.rst:31
msgid "`index.md`"
msgstr ""

#: ../../faq.rst:33
msgid ""
"At the top level of your built documentation, otherwise we aren't able to "
"serve a \"default\" index page."
msgstr ""

#: ../../faq.rst:36
msgid ""
"To test if your docs actually built correctly, you can navigate to a "
"specific page (`/en/latest/README.html` for example)."
msgstr ""

#: ../../faq.rst:40
msgid "How do I change behavior for Read the Docs?"
msgstr ""

#: ../../faq.rst:42
msgid ""
"When RTD builds your project, it sets the :envvar:`READTHEDOCS` environment "
"variable to the string `True`. So within your Sphinx :file:`conf.py` file, "
"you can vary the behavior based on this. For example::"
msgstr ""

#: ../../faq.rst:53
msgid ""
"The :envvar:`READTHEDOCS` variable is also available in the Sphinx build "
"environment, and will be set to ``True`` when building on RTD::"
msgstr ""

#: ../../faq.rst:61
msgid "I get import errors on libraries that depend on C modules"
msgstr ""

#: ../../faq.rst:64
msgid ""
"Another use case for this is when you have a module with a C extension."
msgstr ""

#: ../../faq.rst:66
msgid ""
"This happens because our build system doesn't have the dependencies for "
"building your project. This happens with things like libevent and mysql, and"
" other python things that depend on C libraries. We can't support installing"
" random C binaries on our system, so there is another way to fix these "
"imports."
msgstr ""

#: ../../faq.rst:68
msgid ""
"You can mock out the imports for these modules in your ``conf.py`` with the "
"following snippet::"
msgstr ""

#: ../../faq.rst:81
msgid ""
"Of course, replacing `MOCK_MODULES` with the modules that you want to mock "
"out."
msgstr ""

#: ../../faq.rst:83
msgid ""
"The library ``unittest.mock`` was introduced on python 3.3. On earlier "
"versions install the ``mock`` library from PyPI with (ie ``pip install "
"mock``) and replace the above import::"
msgstr ""

#: ../../faq.rst:88
msgid ""
"If such libraries are installed via ``setup.py``, you also will need to "
"remove all the C-dependent libraries from your ``install_requires`` in the "
"RTD environment."
msgstr ""

#: ../../faq.rst:91
msgid "`Client Error 401` when building documentation"
msgstr ""

#: ../../faq.rst:93
msgid ""
"If you did not install the `test_data` fixture during the installation "
"instructions, you will get the following error::"
msgstr ""

#: ../../faq.rst:98
msgid ""
"This is because the API admin user does not exist, and so cannot "
"authenticate. You can fix this by loading the test_data::"
msgstr ""

#: ../../faq.rst:103
msgid ""
"If you'd prefer not to install the test data, you'll need to provide a "
"database account for the builder to use. You can provide these credentials "
"by editing the following settings::"
msgstr ""

#: ../../faq.rst:111
msgid "Deleting a stale or broken build environment"
msgstr ""

#: ../../faq.rst:113
msgid "See :doc:`guides/wipe-environment`."
msgstr ""

#: ../../faq.rst:116
msgid "How do I host multiple projects on one custom domain?"
msgstr ""

#: ../../faq.rst:118
msgid ""
"We support the concept of subprojects, which allows multiple projects to "
"share a single domain. If you add a subproject to a project, that "
"documentation will be served under the parent project's subdomain or custom "
"domain."
msgstr ""

#: ../../faq.rst:122
msgid ""
"For example, Kombu is a subproject of Celery, so you can access it on the "
"`celery.readthedocs.io` domain:"
msgstr ""

#: ../../faq.rst:126
msgid "http://celery.readthedocs.io/projects/kombu/en/latest/"
msgstr ""

#: ../../faq.rst:128
msgid "This also works the same for custom domains:"
msgstr ""

#: ../../faq.rst:130
msgid "http://docs.celeryproject.org/projects/kombu/en/latest/"
msgstr ""

#: ../../faq.rst:132
msgid "You can add subprojects in the project admin dashboard."
msgstr ""

#: ../../faq.rst:135
msgid "Where do I need to put my docs for RTD to find it?"
msgstr ""

#: ../../faq.rst:137
msgid ""
"Read the Docs will crawl your project looking for a ``conf.py``. Where it "
"finds the ``conf.py``, it will run ``sphinx-build`` in that directory. So as"
" long as you only have one set of sphinx documentation in your project, it "
"should Just Work."
msgstr ""

#: ../../faq.rst:140
msgid "I want to use the Blue/Default Sphinx theme"
msgstr ""

#: ../../faq.rst:142
msgid ""
"We think that our theme is badass, and better than the default for many "
"reasons. Some people don't like change though :), so there is a hack that "
"will let you keep using the default theme. If you set the ``html_style`` "
"variable in your ``conf.py``, it should default to using the default theme. "
"The value of this doesn't matter, and can be set to ``/default.css`` for "
"default behavior."
msgstr ""

#: ../../faq.rst:145
msgid "I want to use the Read the Docs theme locally"
msgstr ""

#: ../../faq.rst:147
msgid ""
"There is a repository for that: https://github.com/snide/sphinx_rtd_theme. "
"Simply follow the instructions in the README."
msgstr ""

#: ../../faq.rst:151
msgid "Image scaling doesn't work in my documentation"
msgstr ""

#: ../../faq.rst:153
msgid ""
"Image scaling in docutils depends on PIL. PIL is installed in the system "
"that RTD runs on. However, if you are using the virtualenv building option, "
"you will likely need to include PIL in your requirements for your project."
msgstr ""

#: ../../faq.rst:156
msgid "I want comments in my docs"
msgstr ""

#: ../../faq.rst:158
msgid ""
"RTD doesn't have explicit support for this. That said, a tool like `Disqus`_"
" (and the `sphinxcontrib-disqus`_ plugin) can be used for this purpose on "
"RTD."
msgstr ""

#: ../../faq.rst:164
msgid "How do I support multiple languages of documentation?"
msgstr ""

#: ../../faq.rst:166
msgid "See the section on :doc:`localization`."
msgstr ""

#: ../../faq.rst:169
msgid "Does Read The Docs work well with \"legible\" docstrings?"
msgstr ""

#: ../../faq.rst:171
msgid ""
"Yes. One criticism of Sphinx is that its annotated docstrings are too dense "
"and difficult for humans to read. In response, many projects have adopted "
"customized docstring styles that are simultaneously informative and legible."
" The `NumPy "
"<https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt>`_ "
"and `Google "
"<https://google.github.io/styleguide/pyguide.html?showone=Comments#Comments>`_"
" styles are two popular docstring formats.  Fortunately, the default Read "
"The Docs theme handles both formats just fine, provided your ``conf.py`` "
"specifies an appropriate Sphinx extension that knows how to convert your "
"customized docstrings.  Two such extensions are `numpydoc "
"<https://github.com/numpy/numpydoc>`_ and `napoleon <http://sphinxcontrib-"
"napoleon.readthedocs.io>`_. Only ``napoleon`` is able to handle both "
"docstring formats. Its default output more closely matches the format of "
"standard Sphinx annotations, and as a result, it tends to look a bit better "
"with the default theme."
msgstr ""

#: ../../faq.rst:189
msgid ""
"Can I document a python package that is not at the root of my repository?"
msgstr ""

#: ../../faq.rst:191
msgid ""
"Yes. The most convenient way to access a python package for example via "
"`Sphinx's autoapi`_ in your documentation is to use the *Install your "
"project inside a virtualenv using setup.py install* option in the admin "
"panel of your project. However this assumes that your ``setup.py`` is in the"
" root of your repository."
msgstr ""

#: ../../faq.rst:197
msgid ""
"If you want to place your package in a different directory or have multiple "
"python packages in the same project, then create a pip requirements file. "
"You can specify the relative path to your package inside the file. For "
"example you want to keep your python package in the ``src/python`` "
"directory, then create a ``requirements.readthedocs.txt`` file with the "
"following contents::"
msgstr ""

#: ../../faq.rst:206
msgid ""
"Please note that the path must be relative to the file. So the example path "
"above would work if the file is in the root of your repository. If you want "
"to put the requirements in a file called ``requirements/readthedocs.txt``, "
"the contents would look like::"
msgstr ""

#: ../../faq.rst:213
msgid ""
"After adding the file to your repository, go to the *Advanced Settings* in "
"your project's admin panel and add the name of the file to the *Requirements"
" file* field."
msgstr ""

#: ../../faq.rst:221
msgid "What commit of Read the Docs is in production?"
msgstr ""

#: ../../faq.rst:223
msgid ""
"We deploy readthedocs.org from the `rel` branch in our GitHub repository. "
"You can see the latest commits that have been deployed by looking on GitHub:"
" https://github.com/rtfd/readthedocs.org/commits/rel"
msgstr ""
