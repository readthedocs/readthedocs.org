# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2018, Read the Docs, Inc & contributors
# This file is distributed under the same license as the Read the Docs package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: readthedocs-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-09-17 19:05-0500\n"
"PO-Revision-Date: 2018-09-18 00:30+0000\n"
"Last-Translator: Anthony <aj@ohess.org>\n"
"Language-Team: Russian (http://www.transifex.com/readthedocs/readthedocs-docs/language/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../builds.rst:2
msgid "Build Process"
msgstr ""

#: ../../builds.rst:4
msgid "Files: `tasks.py`_ - `doc_builder/`_"
msgstr ""

#: ../../builds.rst:9
msgid ""
"Every documentation build has limited resources. Our current build limits "
"are:"
msgstr ""

#: ../../builds.rst:12
msgid "15 minutes"
msgstr ""

#: ../../builds.rst:13
msgid "1GB of memory"
msgstr ""

#: ../../builds.rst:15
msgid ""
"We can increase build limits on a per-project basis, if you provide a good "
"reason your documentation needs more resources."
msgstr ""

#: ../../builds.rst:18
msgid ""
"You can see the current Docker build images that we use in our `docker "
"repository <https://github.com/rtfd/readthedocs-docker-images>`_. `Docker "
"Hub <https://hub.docker.com/r/readthedocs/build/>`_ also shows the latest "
"set of images that have been built."
msgstr ""

#: ../../builds.rst:21
msgid ""
"Currently in production we're using the ``readthedocs/build:2.0`` docker "
"image as our default image."
msgstr ""

#: ../../builds.rst:24
msgid "How we build documentation"
msgstr ""

#: ../../builds.rst:26
msgid ""
"When we import your documentation, we look at two things first: your "
"*Repository URL* and the *Documentation Type*. We will clone your "
"repository, and then build your documentation using the *Documentation Type*"
" specified."
msgstr ""

#: ../../builds.rst:31
msgid "Sphinx"
msgstr ""

#: ../../builds.rst:33
msgid ""
"When you choose *Sphinx* as your *Documentation Type*, we will first look "
"for a ``conf.py`` file in your repository. If we don't find one, we will "
"generate one for you. We will look inside a ``doc`` or ``docs`` directory "
"first, and then look within your entire project."
msgstr ""

#: ../../builds.rst:40
msgid "Then Sphinx will build any files with an ``.rst`` extension."
msgstr ""

#: ../../builds.rst:43
msgid "MkDocs"
msgstr ""

#: ../../builds.rst:45
msgid ""
"When you choose *Mkdocs* as your *Documentation Type*, we will first look "
"for a ``mkdocs.yml`` file in the root of your repository. If we don't find "
"one, we will generate one for you."
msgstr ""

#: ../../builds.rst:50
msgid ""
"Then MkDocs will build any files with a ``.md`` extension within the "
"directory specifed as ``docs_dir`` in the ``mkdocs.yml``."
msgstr ""

#: ../../builds.rst:52
msgid ""
"If no ``mkdocs.yml`` was found in the root of your repository and we "
"generated one for you, Read the Docs will attempt to set ``docs_dir`` by "
"sequentially searching for a  ``docs``, ``doc``, ``Doc``, or ``book`` "
"directory. The first of these directories that exists and contains files "
"with a ``.md`` extension will be set to ``docs_dir`` within ``mkdocs.yml``, "
"and MkDocs will build the ``.md`` files in that directory. As MkDocs doesn't"
" support automatic PDF generation, Read the Docs cannot create a PDF version"
" of your documentation with the *Mkdocs* option."
msgstr ""

#: ../../builds.rst:60
msgid "Understanding what's going on"
msgstr ""

#: ../../builds.rst:62
msgid ""
"Understanding how Read the Docs builds your project will help you with "
"debugging the problems you have with the site. It should also allow you to "
"take advantage of certain things that happen during the build process."
msgstr ""

#: ../../builds.rst:65
msgid ""
"The first step of the process is that we check out your code from the "
"repository you have given us. If the code is already checked out, we update "
"the copy to the branch that you have specified in your projects "
"configuration."
msgstr ""

#: ../../builds.rst:68
msgid ""
"Then we build the proper backend code for the type of documentation you've "
"selected."
msgstr ""

#: ../../builds.rst:70
msgid ""
"If you have the *Install Project* option enabled, we will run ``setup.py "
"install`` on your package, installing it into a virtual environment. You can"
" also define additional packages to install with the *Requirements File* "
"option."
msgstr ""

#: ../../builds.rst:73
msgid ""
"When we build your Sphinx documentation, we run ``sphinx-build -b html . "
"_build/html``, where ``html`` would be replaced with the correct backend. We"
" also create pdf's and ePub's automatically based on your project. For "
"MkDocs, we run ``mkdocs build``."
msgstr ""

#: ../../builds.rst:78
msgid ""
"Then these files are copied across to our application servers from the build"
" server. Once on the application servers, they are served from nginx."
msgstr ""

#: ../../builds.rst:81
msgid "An example in code:"
msgstr ""

#: ../../builds.rst:95
msgid ""
"Regardless of whether you build your docs with Sphinx or MkDocs, we "
"recommend you pin the version of Sphinx or Mkdocs you want us to use. You "
"can do this the same way other :doc:`dependencies are specified <guides"
"/specifying-dependencies>`. Some examples of pinning versions might be "
"``sphinx<2.0`` or ``mkdocs>=1.0``."
msgstr ""

#: ../../builds.rst:102
msgid "Builder responsibility"
msgstr ""

#: ../../builds.rst:104
msgid ""
"Builders have a very specific job. They take the updated source code and "
"generate the correct artifacts. The code lives in "
"``self.version.project.checkout_path(self.version.slug)``. The artifacts "
"should end up in "
"``self.version.project.artifact_path(version=self.version.slug, "
"type=self.type)`` Where ``type`` is the name of your builder. All files that"
" end up in the artifact directory should be in their final form."
msgstr ""

#: ../../builds.rst:112
msgid "The build environment"
msgstr ""

#: ../../builds.rst:114
msgid ""
"The build process is executed inside Docker containers, by default the image"
" used is ``readthedocs/build:2.0``, but you can change that using a "
":doc:`configuration file <yaml-config>`."
msgstr ""

#: ../../builds.rst:120
msgid ""
"The Docker images have a select number of C libraries installed, because "
"they are used across a wide array of python projects. We can't install every"
" C library out there, but we try and support the major ones."
msgstr ""

#: ../../builds.rst:127
msgid ""
"If you want to know the specific version of a package that is installed in "
"the image you can check the `Ubuntu package search page "
"<https://packages.ubuntu.com/>`__."
msgstr ""

#: ../../builds.rst:131
msgid "2.0 (stable)"
msgstr ""

#: ../../builds.rst:0 ../../builds.rst:0
msgid "O.S"
msgstr ""

#: ../../builds.rst:133 ../../builds.rst:157
msgid "Ubuntu 16.04"
msgstr ""

#: ../../builds.rst:0 ../../builds.rst:0
msgid "Conda"
msgstr ""

#: ../../builds.rst:134
msgid "Miniconda 4.3.31"
msgstr ""

#: ../../builds.rst:0 ../../builds.rst:0
msgid "Python"
msgstr ""

#: ../../builds.rst:136
msgid "``m2crypto``"
msgstr ""

#: ../../builds.rst:137 ../../builds.rst:160
msgid "``matplolib``"
msgstr ""

#: ../../builds.rst:138
msgid "``numpy``"
msgstr ""

#: ../../builds.rst:139 ../../builds.rst:162
msgid "``pandas``"
msgstr ""

#: ../../builds.rst:140 ../../builds.rst:163
msgid "``pip``"
msgstr ""

#: ../../builds.rst:141 ../../builds.rst:164
msgid "``scipy``"
msgstr ""

#: ../../builds.rst:0 ../../builds.rst:0
msgid "Other packages"
msgstr ""

#: ../../builds.rst:143 ../../builds.rst:170
msgid "``doxygen``"
msgstr ""

#: ../../builds.rst:144
msgid "``graphviz``"
msgstr ""

#: ../../builds.rst:145
msgid "``libevent``"
msgstr ""

#: ../../builds.rst:146 ../../builds.rst:173
msgid "``libjpeg``"
msgstr ""

#: ../../builds.rst:147 ../../builds.rst:174
msgid "``libxml2-dev``"
msgstr ""

#: ../../builds.rst:148
msgid "``libxslt1.1``"
msgstr ""

#: ../../builds.rst:149 ../../builds.rst:176
msgid "``pandoc``"
msgstr ""

#: ../../builds.rst:150 ../../builds.rst:178
msgid "``textlive-full``"
msgstr ""

#: ../../builds.rst:152
msgid ""
"`More details <https://github.com/rtfd/readthedocs-docker-"
"images/blob/releases/2.x/Dockerfile>`__"
msgstr ""

#: ../../builds.rst:155
msgid "3.0 (latest)"
msgstr ""

#: ../../builds.rst:158
msgid "Miniconda 4.4.10"
msgstr ""

#: ../../builds.rst:161
msgid "``numpy``,"
msgstr ""

#: ../../builds.rst:0
msgid "JavaScript"
msgstr ""

#: ../../builds.rst:166
msgid "``jsdoc``"
msgstr ""

#: ../../builds.rst:167
msgid "``nodejs``"
msgstr ""

#: ../../builds.rst:168
msgid "``npm``"
msgstr ""

#: ../../builds.rst:171
msgid "``libevent-dev``"
msgstr ""

#: ../../builds.rst:172
msgid "``libgraphviz-dev``"
msgstr ""

#: ../../builds.rst:175
msgid "``libxslt1-dev``"
msgstr ""

#: ../../builds.rst:177
msgid "``plantuml``"
msgstr ""

#: ../../builds.rst:180
msgid ""
"`More details <https://github.com/rtfd/readthedocs-docker-"
"images/blob/releases/3.x/Dockerfile>`__"
msgstr ""

#: ../../builds.rst:183
msgid "Writing your own builder"
msgstr ""

#: ../../builds.rst:185
msgid ""
"Builds happen on a server using only the RTD Public API. There is no reason "
"that you couldn't build your own independent builder that wrote into the RTD"
" namespace. The only thing that is currently unsupported there is a saner "
"way than uploading the processed files as a zip."
msgstr ""

#: ../../builds.rst:187
msgid ""
"The documentation build system in RTD is made pluggable, so that you can "
"build out your own backend. If you have a documentation format that isn't "
"currently supported, you can add support by contributing a backend."
msgstr ""

#: ../../builds.rst:189
msgid ""
"The builders in :doc:`/developer-interface/doc_builder` detail the higher "
"level parts of the API that you need to implement. A basic run goes "
"something like this::"
msgstr ""

#: ../../builds.rst:200
msgid "Deleting a stale or broken build environment"
msgstr ""

#: ../../builds.rst:202
msgid ""
"If you're having trouble getting your version to build, try wiping out the "
"existing build/environment files.  On your version list page "
"``/projects/[project]/versions`` there is a \"Wipe\" button that will remove"
" all of the files associated with your documentation build, but not the "
"documentation itself."
msgstr ""

#: ../../builds.rst:205
msgid "Build environment"
msgstr ""

#: ../../builds.rst:207
msgid ""
"The *Sphinx* and *Mkdocs* builders set the following RTD-specific "
"environment variables when building your documentation:"
msgstr ""

#: ../../builds.rst:210
msgid "Environment variable"
msgstr ""

#: ../../builds.rst:210
msgid "Description"
msgstr ""

#: ../../builds.rst:210
msgid "Example value"
msgstr ""

#: ../../builds.rst:212
msgid "``READTHEDOCS``"
msgstr ""

#: ../../builds.rst:212
msgid "Whether the build is running inside RTD"
msgstr ""

#: ../../builds.rst:212
msgid "``True``"
msgstr ""

#: ../../builds.rst:214
msgid "``READTHEDOCS_VERSION``"
msgstr ""

#: ../../builds.rst:214
msgid "The RTD name of the version which is being built"
msgstr ""

#: ../../builds.rst:214
msgid "``latest``"
msgstr ""

#: ../../builds.rst:216
msgid "``READTHEDOCS_PROJECT``"
msgstr ""

#: ../../builds.rst:216
msgid "The RTD name of the project which is being built"
msgstr ""

#: ../../builds.rst:216
msgid "``myexampleproject``"
msgstr ""
